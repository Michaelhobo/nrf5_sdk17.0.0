load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = "//visibility:public")

cc_library(
    name = "nrf_aar",
    hdrs = ["nrf_aar.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_acl",
    hdrs = ["nrf_acl.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_adc",
    hdrs = ["nrf_adc.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_bprot",
    hdrs = ["nrf_bprot.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_ccm",
    hdrs = ["nrf_ccm.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_clock",
    hdrs = ["nrf_clock.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_comp",
    hdrs = ["nrf_comp.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_dppi",
    hdrs = ["nrf_dppi.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_ecb",
    srcs = ["nrf_ecb.c"],
    hdrs = ["nrf_ecb.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_egu",
    hdrs = ["nrf_egu.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_ficr",
    hdrs = ["nrf_ficr.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_gpio",
    hdrs = ["nrf_gpio.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_gpiote",
    hdrs = ["nrf_gpiote.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_i2s",
    hdrs = ["nrf_i2s.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_kmu",
    hdrs = ["nrf_kmu.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_lpcomp",
    hdrs = ["nrf_lpcomp.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_mpu",
    hdrs = ["nrf_mpu.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_mwu",
    hdrs = ["nrf_mwu.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_nfct",
    hdrs = ["nrf_nfct.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_nvmc",
    srcs = ["nrf_nvmc.c"],
    hdrs = ["nrf_nvmc.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_pdm",
    hdrs = ["nrf_pdm.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_power",
    hdrs = ["nrf_power.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_ppi",
    hdrs = ["nrf_ppi.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_pwm",
    hdrs = ["nrf_pwm.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_qdec",
    hdrs = ["nrf_qdec.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_qspi",
    hdrs = ["nrf_qspi.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_radio",
    hdrs = ["nrf_radio.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_regulators",
    hdrs = ["nrf_regulators.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_rng",
    hdrs = ["nrf_rng.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_rtc",
    hdrs = ["nrf_rtc.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_saadc",
    hdrs = ["nrf_saadc.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_spi",
    hdrs = ["nrf_spi.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_spim",
    hdrs = ["nrf_spim.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_spis",
    hdrs = ["nrf_spis.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_spu",
    hdrs = ["nrf_spu.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_systick",
    hdrs = ["nrf_systick.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_temp",
    hdrs = ["nrf_temp.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_timer",
    hdrs = ["nrf_timer.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_twi",
    hdrs = ["nrf_twi.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_twim",
    hdrs = ["nrf_twim.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_twis",
    hdrs = ["nrf_twis.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_uart",
    hdrs = ["nrf_uart.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_uarte",
    hdrs = ["nrf_uarte.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_usbd",
    hdrs = ["nrf_usbd.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_vmc",
    hdrs = ["nrf_vmc.h"],
    includes = ["."],
)

cc_library(
    name = "nrf_wdt",
    hdrs = ["nrf_wdt.h"],
    includes = ["."],
)
